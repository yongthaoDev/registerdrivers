{"version":3,"sources":["img/loading.gif","helper/index.js","img/logo-app.png","img/males.png","pages/register/apollo/index.js","helper/s3Client.js","helper/components/apollo/index.js","helper/components/ListRoutelocation.js","pages/register/form.js","routes/index.js","store/index.js","App.js","reportWebVitals.js","index.js"],"names":["currency","Date","getFullYear","value","currencys","Intl","NumberFormat","format","valiDate","style","color","messageSuccess","e","Notiflix","Notify","init","position","success","messageWarning","warning","loadingData","size","content","src","loadingImage","alt","width","height","CREATE_REGISTER_DRIVERS","gql","s3Client","S3","bucketName","dirName","region","accessKeyId","secretAccessKey","s3Url","LIST_ROUTE_LOCATION","ListRouteLocation","className","defaultValue","getData","where","disabled","inputSize","useState","searchValue","setSearchValue","show","setShow","useLazyQuery","fetchData","data","loading","useEffect","variables","title","undefined","isPublic","noLimit","handleClick","result","routeLocationDrivers","filter","obj","length","error","Fragment","type","opacity","onClick","Modal","centered","onHide","animation","Header","closeButton","Title","Body","class","onChange","target","onInput","placeholder","map","index","borderTop","borderBottom","priceDay","priceNight","RegisterDriverPartner","history","useMutation","createRegister","routeLocation","setListRouteLocation","imageFile","setImageFile","setCloseFile","imageName","setImageName","file","setFile","handleUpload","event","a","uuidv4","files","split","_file","uploadFile","res","location","subMitFiles","_imageFile","paddingBottom","marginTop","initialValues","firstName","lastName","note","phoneNumber","vehicleDetails","validate","values","errors","gender","_id","routeID","onSubmit","String","parseInt","profileImage","setTimeout","window","reload","handleChange","handleBlur","handleSubmit","isSubmitting","logo","textAlign","for","id","hidden","htmlFor","URL","createObjectURL","name","male","required","onBlur","backgroundColor","borderTopLeftRadius","borderBottomLeftRadius","maxLength","rows","Routes","margin","exact","path","component","props","userReducer","state","action","payload","pageTitleReducer","dateReducer","AppContext","React","createContext","App","useReducer","userState","userDispatch","titleState","titleDispatch","startDate","endDate","dateState","dateDispatch","client","ApolloClient","uri","cache","InMemoryCache","addTypename","request","operation","_resData","localStorage","getItem","_localJson","JSON","parse","setContext","headers","authorization","accessToken","onError","err","console","log","isTokenError1","_","some","graphQLErrors","message","isTokenError2","isTokenError3","Report","clear","replace","Provider","ApolloProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f86a33f8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.3910906e.gif\";","import Notiflix from \"notiflix\";\r\nimport React from \"react\";\r\nimport moment from \"moment\";\r\nimport loadingImage from \"../img/loading.gif\";\r\n\r\nvar start_year = new Date().getFullYear();\r\nexport const ITEM_PER_PAGE = 20;\r\nexport const aws_url_image =\r\n  \"https://anousith-bucket.s3.ap-southeast-1.amazonaws.com/images/\";\r\n\r\nexport const TOKEN = \"ANS_COD\";\r\nexport const FONT_SIZE = { fontSize: \"15px\" };\r\nexport const PRIMARY_COLOR = \"#b51818\";\r\n// year\r\nexport const getYeear = () => {\r\n  let getYeear = [];\r\n  for (let date = 1990; date < start_year + 1; date++) {\r\n    getYeear.push(date);\r\n  }\r\n  return getYeear;\r\n};\r\n//  category_financetype\r\nexport const financetype = (item) => {\r\n  if (item === \"INCOME\") {\r\n    return \"ລາຍຮັບ\";\r\n  } else {\r\n    return \"ລາຍຈ່າຍ\";\r\n  }\r\n};\r\n\r\n//  unitCurrency\r\nexport const unitCurrency = (item) => {\r\n  if (item === \"COD\") {\r\n    return \"ເງິນສົດ\";\r\n  } else if (item === \"TRANSFER\") {\r\n    return \"ເງິນໂອນ\";\r\n  } else {\r\n    return \"-\";\r\n  }\r\n};\r\n\r\n//  paystatus\r\nexport const payStatus = (item) => {\r\n  if (item === \"ORIGIN\") {\r\n    return \"ຊຳລະຕົ້ນທາງ\";\r\n  } else if (item === \"DESTINATION\") {\r\n    return \"ຊຳລະປາຍທາງ\";\r\n  } else {\r\n    return \"-\";\r\n  }\r\n};\r\n\r\n// itemStatus;\r\n\r\nexport const itemStatus = (item) => {\r\n  if (item === \"ORIGIN_BRANCH_RECEIVED_FORWARD\") {\r\n    return \"ເຄື່ອງຢູ່ສາຂາຕົ້ນທາງ\";\r\n  } else if (item === \"TRANSIT_TO_DEST_BRANCH\") {\r\n    return \"ກຳລັງເຄື່ອນຍ້າຍໄປປາຍທາງ\";\r\n  } else if (item === \"RIDER_APPROVED\") {\r\n    return \"ໄຮເດີຮັບເຄື່ອງແລ້ວ\";\r\n  } else if (item === \"DEST_BRANCH_RECEIVED_FORWARD\") {\r\n    return \"ຮອດປາຍທາງແລ້ວ\";\r\n  } else if (item === \"TRANSIT_TO_ORIGIN_BRANCH\") {\r\n    return \"ກຳລັງຕິກັບສາຂາຕົ້ນທາງ\";\r\n  } else if (item === \"ORIGIN_BRANCH_RECEIVED_BACKWARD\") {\r\n    return \"ຕີກັບຮອບຕົ້ນທາງແລ້ວ\";\r\n  } else if (item === \"COMPLETED\") {\r\n    return \"ສົ່ງສຳເລັດ\";\r\n  } else {\r\n    return \"-\";\r\n  }\r\n};\r\nexport const feedbackStatus = (item) => {\r\n  if (item === \"REQUESTING\") {\r\n    return \"ກຳລັງຮ້ອງຮຽນ...\";\r\n  } else if (item === \"ACCEPTED\") {\r\n    return \"ຮັບເລື່ອງແລ້ວ\";\r\n  } else if (item === \"REJECTED\") {\r\n    return \"ປະຕິເສດ\";\r\n  } else if (item === \"PROCESSING\") {\r\n    return \"ກຳລັງແກ້ໄຂ...\";\r\n  } else if (item === \"COMPLETED\") {\r\n    return \"ແກ້ໄຂສຳເລັດ\";\r\n  } else {\r\n    return \"-\";\r\n  }\r\n};\r\n\r\nexport const reportType = (item) => {\r\n  if (item === \"SYSTEM\") {\r\n    return \"ລະບົບ ແລະ ແອັບ\";\r\n  } else if (item === \"SERVICE\") {\r\n    return \"ການບໍລິການລູກຄ້າ\";\r\n  } else if (item === \"REPLY\") {\r\n    return \"ການຕອບແຊັດ\";\r\n  } else if (item === \"BROKED\") {\r\n    return \"ເຄື່ອງເປ່ເພ\";\r\n  } else if (item === \"LOST\") {\r\n    return \"ເຄື່ອງເສຍຫາຍ\";\r\n  } else if (item === \"COD\") {\r\n    return \"ການຮັບເງິນ COD\";\r\n  } else if (item === \"VEHICLE\") {\r\n    return \"ບັນຫາພາຫະນະ\";\r\n  } else if (item === \"OTHER_TYPE\") {\r\n    return \"ບັນຫາອື່ນໆ\";\r\n  } else {\r\n    return \"-\";\r\n  }\r\n};\r\n\r\n// status category_financetype\r\nexport const statusFinancetype = (item) => {\r\n  if (item === false) {\r\n    return \"ປິດໃຊ້ງານ\";\r\n  } else {\r\n    return \"ເປີດໃຊ້ງານ\";\r\n  }\r\n};\r\n\r\n// educationlevel\r\nexport const getEducationLevel = () => {\r\n  let getYear = [];\r\n  var start_year = new Date().getFullYear();\r\n  for (var i = start_year; i < start_year + 10; i++) {\r\n    getYear.push(i - 1 + \"-\" + i);\r\n  }\r\n  return getYear;\r\n};\r\n\r\n// ກຳນົດ role\r\nexport const setRole = (SetRole) => {\r\n  let res = \"\";\r\n  switch (SetRole) {\r\n    case \"ADMIN\":\r\n      res = \"ຜູ້ບໍລິຫານ\";\r\n      break;\r\n    case \"ACCOUNTANT\":\r\n      res = \"ບັນຊີ ແລະ ການເງິນ\";\r\n      break;\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const ROLES = [\r\n  { id: 1, roleName: \"ADMIN\" },\r\n  { id: 2, roleName: \"ACCOUNTANT\" },\r\n  { id: 3, roleName: \"HR\" },\r\n  { id: 4, roleName: \"CUSTOMER_SERVICE\" },\r\n  { id: 5, roleName: \"SHIPPER\" },\r\n  { id: 6, roleName: \"CALL_CENTER\" },\r\n  { id: 7, roleName: \"RIDER\" },\r\n  { id: 8, roleName: \"CUSTOMER\" },\r\n  { id: 9, roleName: \"STAFF\" },\r\n];\r\n\r\n// ກຳນົດ ເພດ\r\nexport const setGender = (SetGender) => {\r\n  let res = \"\";\r\n  switch (SetGender) {\r\n    case \"MALE\":\r\n      res = \"ຊາຍ\";\r\n      break;\r\n    case \"FEMALE\":\r\n      res = \"ຍິງ\";\r\n      break;\r\n    case \"OTHER\":\r\n      res = \"ບໍ່ລະບຸ\";\r\n      break;\r\n  }\r\n  return res;\r\n};\r\n\r\n// ກຳນົດ ສະຖານະປິດເປີດ\r\nexport const setSwich = (string) => {\r\n  let res = \"\";\r\n  switch (string) {\r\n    case true:\r\n      res = \"ເປີດ\";\r\n      break;\r\n    case false:\r\n      res = \"ປິດ\";\r\n      break;\r\n  }\r\n  return res;\r\n};\r\n\r\n// ກຳນົດ ສະຖານະພາບ\r\nexport const MaritualStatus = (maritualStatus) => {\r\n  let status = \"\";\r\n  switch (maritualStatus) {\r\n    case \"SINGLE\":\r\n      status = \"ໂສດ\";\r\n      break;\r\n    case \"MARRIAGE\":\r\n      status = \"ເເຕ່ງງານ\";\r\n      break;\r\n  }\r\n  return status;\r\n};\r\n\r\nexport const ITEM_PAGE_LIST = [\r\n  { itemPage: \"1\" },\r\n  { itemPage: \"2\" },\r\n  { itemPage: \"3\" },\r\n  { itemPage: \"4\" },\r\n  { itemPage: \"5\" },\r\n  { itemPage: \"ທັງໜົດ\" },\r\n];\r\n\r\nexport const bracket = (tag) => {\r\n  let st = \"(\";\r\n  let en = \")\";\r\n  let i = st + tag + en;\r\n  return i;\r\n};\r\n\r\n// ວັນທີເດືອນປີເລີ່ມວັນທີ ເລີ່ມເດືອນ ເລີ່ມປີ\r\nexport const startOfMonth = () => {\r\n  return moment().clone().startOf(\"month\").format(\"YYYY-MM-DD\");\r\n};\r\n\r\n// ວັນທີເດືອນປີ ທ້າຍວັນທີ ທ້າວເດືອນ ທ້າຍປີ\r\nexport const endOfMonth = () => {\r\n  return moment().clone().endOf(\"month\").format(\"YYYY-MM-DD\");\r\n};\r\n\r\n//  ກຳນົດ ອາຍຸ\r\nexport const age = (age) => {\r\n  let today = new Date();\r\n  let y = today.getFullYear();\r\n  let dob = moment(age).format(\"YYYY\");\r\n  return y - dob;\r\n};\r\n\r\n// ກຳນົດ ຟໍແມັດເງິນ\r\nexport const currency = (value) => {\r\n  let currencys = new Intl.NumberFormat(\"en-CA\").format(value);\r\n  if (value != 0) return currencys;\r\n  else if (value == 0) return \"0\";\r\n  else return \"\";\r\n};\r\n\r\n//formatDateTime\r\nexport const formatDateTime = (dateTime) => {\r\n  let resp = moment(dateTime).format(\"DD-MM-YYYY, HH:mm\");\r\n  return resp;\r\n};\r\n\r\n// ກຳນົດ ວັນທີປັດຈຸບັນ(ພາສາລາວ)\r\nexport const formatDate = (dateTime) => {\r\n  moment.locale(\"lo\");\r\n  let resp = moment(dateTime).format(\"DD MMMM YYYY\");\r\n  if (dateTime) return resp;\r\n  else return \"-\";\r\n};\r\n\r\n// ກຳນົດ ວັນທີປັດຈຸບັນ(/)\r\nexport const formateDateSlash = (slashData) => {\r\n  let resp = moment(slashData).format(\"YYYY/MM/DD\");\r\n  return resp;\r\n};\r\n\r\n// ກຳນົດ ວັນທີປັດຈຸບັນ(-)\r\nexport const formatDateDash = (dashDate) => {\r\n  let resp = moment(dashDate).format(\"YYYY-MM-DD\");\r\n  return resp;\r\n};\r\n\r\n// ກຳນົດ ວັນທີປັດຈຸບັນ(ຖັດໄປ 1 ອາທິດ)\r\nexport const nextSevenDay = () => {\r\n  var nextSenvenDay = moment().add(7, \"days\");\r\n  var nextSevenDays = moment(nextSenvenDay).format(\"YYYY-MM-DD\");\r\n  return nextSevenDays;\r\n};\r\n\r\n// ກຳນົດ ວັນທີປັດຈຸບັນ(ຖັດໄປ 1 ມື້)\r\nexport const nextOneDay = () => {\r\n  var nextOneDay = moment().add(1, \"days\");\r\n  var nextOneDays = moment(nextOneDay).format(\"YYYY-MM-DD\");\r\n  return nextOneDays;\r\n};\r\n\r\n// ກຳນົດ ວັນທີ ແລະ ເວລາປັດຈຸບັນ(ພາສາລາວ)\r\nexport const toDay = () => {\r\n  moment.locale(\"lo\");\r\n  var today = new Date();\r\n  var todays = moment(today).format(\"DD/MM/YY, HH:mm\");\r\n  return todays;\r\n};\r\n\r\n// ກຳນົດ ວັນທີປັດຈຸບັນ(-)\r\nexport const toDayDash = () => {\r\n  var today = new Date();\r\n  var todays = moment(today).format(\"YYYY-MM-DD\");\r\n  return todays;\r\n};\r\n\r\nexport const unixTimeFormat = (x) => {\r\n  let res = moment.unix(x).format(\"YYYY-MM-DD HH:SS\");\r\n  if (res) return res;\r\n};\r\n\r\nexport const reconvertDay = (day) => {\r\n  let result = \"\";\r\n  switch (day) {\r\n    case \"MONDAY\":\r\n      result = \"ຈັນ\";\r\n      break;\r\n    case \"TUESDAY\":\r\n      result = \"ອັງຄານ\";\r\n      break;\r\n    case \"WEDNESDAY\":\r\n      result = \"ພຸດ\";\r\n      break;\r\n    case \"THURSDAY\":\r\n      result = \"ພະຫັດ\";\r\n      break;\r\n    case \"FRIDAY\":\r\n      result = \"ສຸກ\";\r\n      break;\r\n    case \"SATURDAY\":\r\n      result = \"ເສົາ\";\r\n      break;\r\n    case \"SUNDAY\":\r\n      result = \"ອາທິດ\";\r\n      break;\r\n    default:\r\n      result = \"ຈັນ\";\r\n  }\r\n  return result;\r\n};\r\n\r\n// ກຳນົດ ເຄື່ອງໝາຍ ບັງຄັບໃຫ້ປ້ອນຂໍ້ມູນ\r\nexport const valiDate = () => {\r\n  return <font style={{ color: \"red\" }}> * </font>;\r\n};\r\n\r\n// ກຳນົດ ການຈັດລຽງຕາມຄ່າຕ່າງໆ\r\nexport const SortBy = ({ sort }) => {\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        sort();\r\n      }}\r\n      style={{\r\n        float: \"right\",\r\n        marginRight: 5,\r\n        cursor: \"pointer\",\r\n      }}\r\n    >\r\n      <i className=\"fa fa-sort\"></i>\r\n    </div>\r\n  );\r\n};\r\n\r\n// =======>>> month\r\n\r\nexport const _month = [\r\n  {\r\n    id: \"09\",\r\n    month: \"ກັນຍາ\",\r\n  },\r\n  {\r\n    id: \"10\",\r\n    month: \"ຕຸລາ\",\r\n  },\r\n  {\r\n    id: \"11\",\r\n    month: \"ພະຈິກ\",\r\n  },\r\n  {\r\n    id: \"12\",\r\n    month: \"ທັນວາ\",\r\n  },\r\n  {\r\n    id: \"01\",\r\n    month: \"ມັງກອນ\",\r\n  },\r\n  {\r\n    id: \"02\",\r\n    month: \"ກຸມພາ\",\r\n  },\r\n  {\r\n    id: \"03\",\r\n    month: \"ມີນາ\",\r\n  },\r\n  {\r\n    id: \"04\",\r\n    month: \"ເມສາ\",\r\n  },\r\n  {\r\n    id: \"05\",\r\n    month: \"ພຶດສະພາ\",\r\n  },\r\n  // {\r\n  //   id: \"6\",\r\n  //   month:\"ມິຖຸນາ\"\r\n  // },\r\n  // {\r\n  //   id: \"7\",\r\n  //   month:\"ກໍລະກົດ\"\r\n  // },\r\n  // {\r\n  //   id: \"8\",\r\n  //   month:\"ສິງຫາ\"\r\n  // },\r\n];\r\nexport const paymentMethodFinance = (item) => {\r\n  if (item === \"PAY_ONLINE\") {\r\n    return \"ອອນລາຍ\";\r\n  } else if (item === \"PAY_CASH\") {\r\n    return \"ເງິນສົດ\";\r\n  } else {\r\n    return \"-\";\r\n  }\r\n};\r\n\r\nexport const startLoading = () => {\r\n  return Notiflix.Loading.standard(\"Loading...\");\r\n};\r\nexport const stopLoading = () => {\r\n  return Notiflix.Loading.remove();\r\n};\r\n\r\nexport const messageSuccess = (e) => {\r\n  Notiflix.Notify.init({ position: \"center-top\" });\r\n  Notiflix.Notify.success(e);\r\n};\r\n\r\nexport const messageError = (e) => {\r\n  Notiflix.Notify.init({ position: \"center-top\" });\r\n  Notiflix.Notify.failure(e);\r\n};\r\n\r\nexport const messageWarning = (e) => {\r\n  Notiflix.Notify.init({ position: \"center-top\" });\r\n  Notiflix.Notify.warning(e);\r\n};\r\nexport const startSpriner = (color) => {\r\n  return (\r\n    <div className={`spinner-border text-${color}`} role=\"status\">\r\n      <span className=\"sr-only\">ກຳລັງໂຫຼດຂໍ້ມູນ...</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const sprinerLoading = (color, content) => {\r\n  return (\r\n    <span>\r\n      <span\r\n        style={{ position: \"relative\", marginBottom: \"5%\" }}\r\n        className={`text-${color} spinner-border spinner-grow-sm mr-2`}\r\n      ></span>\r\n      <span style={{ position: \"absolute\", verticalAlign: \"middle\" }}>\r\n        {content}\r\n      </span>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport const loadingData = (size, content) => {\r\n  return (\r\n    <>\r\n      <img\r\n        src={loadingImage}\r\n        alt=\"loading\"\r\n        style={{ width: size, height: size }}\r\n      />{\" \"}\r\n      {content}\r\n    </>\r\n  );\r\n};\r\n\r\n//createdAt\r\nexport const startDate_gte = (date) => {\r\n  return moment(date).unix();\r\n};\r\nexport const endDate_lt = (date) => {\r\n  return moment(date).unix();\r\n};\r\n\r\nexport const createdAt_gte = (date) => {\r\n  const _date = date ? date : new Date();\r\n  return moment(_date).format(\"YYYY-MM-DD\");\r\n};\r\n\r\nexport const createdAt_lt = (date) => {\r\n  const _date = date ? date : new Date();\r\n  return moment(_date).add(1, \"days\").format(\"YYYY-MM-DD\");\r\n};\r\n\r\n//updatedAt\r\nexport const updatedAt_gte = (date) => {\r\n  const _date = date ? date : new Date();\r\n  return moment(_date).format(\"YYYY-MM-DD\");\r\n};\r\n\r\nexport const updatedAt_lt = (date) => {\r\n  const _date = date ? date : new Date();\r\n  return moment(_date).add(1, \"days\").format(\"YYYY-MM-DD\");\r\n};\r\n\r\n//confirm\r\nexport const notiflixConfirm = (title, cb) => {\r\n  Notiflix.Confirm.show(\r\n    \"ແຈ້ງເຕືອນ\",\r\n    title,\r\n    \"ຕົກລົງ\",\r\n    \"ຍົກເລີກ\",\r\n    () => {\r\n      cb();\r\n    },\r\n    () => {\r\n      return false;\r\n    }\r\n  );\r\n};\r\n\r\n//limit input number only\r\nexport const numberOnlyInput = (event) => {\r\n  if (!/[0-9]/.test(event.key)) {\r\n    event.preventDefault();\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo-app.08726185.png\";","export default __webpack_public_path__ + \"static/media/males.a1c942d9.png\";","import { gql } from \"apollo-boost\";\r\n\r\nexport const QUERY_FEEDBACK = gql`\r\nquery FeedBacks($where: FeedBackWhereInput, $orderBy: OrderByInput, $skip: Int, $limit: Int) {\r\n  feedBacks(where: $where, orderBy: $orderBy, skip: $skip, limit: $limit) {\r\n    total\r\n    data {\r\n      _id\r\n      title\r\n      content\r\n      reportType\r\n      status\r\n      image\r\n      createdAt\r\n      updatedBy\r\n      updatedAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const CREATE_REGISTER_DRIVERS = gql`\r\nmutation CreateRegisterDriverPartner($data: RegisterDriverPartnerInput!) {\r\n  createRegisterDriverPartner(data: $data) {\r\n    _id\r\n  }\r\n}\r\n`;","import S3 from 'react-aws-s3';\r\n\r\nconst config = {\r\n    bucketName: 'anousith-bucket',\r\n    dirName: 'imageregisterdrivers', \r\n    region: 'ap-southeast-1',\r\n    accessKeyId: 'AKIAUEQCQ2DVXZPKJ5MM',\r\n    secretAccessKey: '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',\r\n    s3Url: 'https://anousith-bucket.s3.ap-southeast-1.amazonaws.com',\r\n}\r\n export const s3Client = new S3(config);\r\n\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const PROVINCES = gql`\r\n  query Provinces(\r\n    $where: ProvinceWhereInput\r\n    $orderBy: OrderByInput\r\n    $skip: Int\r\n    $limit: Int\r\n  ) {\r\n    provinces(where: $where, orderBy: $orderBy, skip: $skip, limit: $limit) {\r\n      data {\r\n        id_state\r\n        provinceName\r\n        provinceCode\r\n        province_map_lat\r\n        province_map_lng\r\n        addressInfo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DISTRICTS = gql`\r\n  query Districts(\r\n    $where: DistrictWhereInput\r\n    $orderBy: OrderByInput\r\n    $skip: Int\r\n    $limit: Int\r\n  ) {\r\n    districts(where: $where, orderBy: $orderBy, skip: $skip, limit: $limit) {\r\n      data {\r\n        id_list\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const BRANCHES = gql`\r\n  query Branches(\r\n    $limit: Int\r\n    $skip: Int\r\n    $orderBy: OrderByInput\r\n    $where: BranchWhereInput\r\n  ) {\r\n    branches(limit: $limit, skip: $skip, orderBy: $orderBy, where: $where) {\r\n      total\r\n      data {\r\n        branch_name\r\n        id_branch\r\n        branch_address\r\n        branch_code\r\n        address_info\r\n        provinceID {\r\n          id_state\r\n          provinceName\r\n        }\r\n        districtName\r\n        public\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ANS_ITEM = gql`\r\n  query AnsItem($where: AnsItemWhereInputOne!) {\r\n    ansItem(where: $where) {\r\n      trackingId\r\n      itemName\r\n      receiptName\r\n      receiptPhone\r\n      note\r\n      itemValue_kip\r\n      itemValue_thb\r\n      itemValue_usd\r\n      long\r\n      weight\r\n      priceItem\r\n      createdAt\r\n      deliveredDate\r\n      destinationDate\r\n      originalBranch {\r\n        branchName\r\n        province {\r\n          provinceName\r\n        }\r\n        district {\r\n          districtName\r\n        }\r\n        village {\r\n          villageName\r\n        }\r\n      }\r\n      destinationBranch {\r\n        branchName\r\n        province {\r\n          provinceName\r\n        }\r\n        district {\r\n          districtName\r\n        }\r\n        village {\r\n          villageName\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const VILLAGES = gql`\r\n  query Villages($where: VillageWhereInput, $limit: Int) {\r\n    villages(where: $where, limit: $limit) {\r\n      data {\r\n        _id\r\n        villageName\r\n        villageCode\r\n        detail\r\n        lat\r\n        long\r\n        note\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LIST_ROUTE_LOCATION = gql`\r\nquery Data(\r\n  $where: RouteLocationDriverWhereInput\r\n  $orderBy: OrderByInput\r\n  $skip: Int\r\n  $limit: Int\r\n  $noLimit: Boolean\r\n) {\r\n  routeLocationDrivers(\r\n    where: $where\r\n    orderBy: $orderBy\r\n    skip: $skip\r\n    limit: $limit\r\n    noLimit: $noLimit\r\n  ) {\r\n    data {\r\n      title\r\n      locationCode\r\n      _id\r\n      isPublic\r\n      priceDay\r\n      priceNight\r\n    }\r\n  }\r\n}\r\n`;\r\n","import { useLazyQuery } from \"@apollo/client\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { currency, loadingData } from \"..\";\r\nimport { LIST_ROUTE_LOCATION } from \"./apollo\";\r\nimport \"./utils/index.css\";\r\n\r\nexport default function ListRouteLocation({\r\n  style,\r\n  className,\r\n  defaultValue,\r\n  size,\r\n  getData,\r\n  where,\r\n  disabled,\r\n}) {\r\n  const inputSize =\r\n    size === \"lg\"\r\n      ? \"form-control-lg\"\r\n      : size === \"sm\"\r\n      ? \"form-control-sm\"\r\n      : \"form-control-md\";\r\n  const [searchValue, setSearchValue] = useState();\r\n  const [show, setShow] = useState(false);\r\n  const [fetchData, { data, loading }] = useLazyQuery(LIST_ROUTE_LOCATION);\r\n\r\n  useEffect(() => {\r\n    fetchData({\r\n      variables: {\r\n        where: {\r\n          title: searchValue ? searchValue : undefined,\r\n          isPublic: 1,\r\n          ...where,\r\n        },\r\n        noLimit: true,\r\n      },\r\n    });\r\n  }, [searchValue, where]);\r\n  const handleClick = (value) => {\r\n    if (!value && getData) {\r\n      getData(null);\r\n      setShow(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const result = data?.routeLocationDrivers?.data?.filter(\r\n        (obj) => obj?.title === value\r\n      );\r\n\r\n      if (result.length > 0 && getData) {\r\n        getData(result[0]);\r\n        setShow(false);\r\n      }\r\n    } catch (error) {\r\n      if (getData) getData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <input\r\n        type={\"button\"}\r\n        className={`form-control text-left ${inputSize} ${className}`}\r\n        style={{ opacity: defaultValue ? 1 : 0.3 }}\r\n        value={defaultValue ? defaultValue : \"ເລືອກສາຍລົດ\"}\r\n        onClick={() => setShow(true)}\r\n        disabled={disabled}\r\n      />\r\n      <Modal\r\n        show={show}\r\n        centered\r\n        style={style}\r\n        className={className}\r\n        onHide={() => setShow(false)}\r\n        animation={false}\r\n        size=\"lg\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"fs-5\">ເລືອກເລືອກສາຍລົດ</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"custom-modal-body\">\r\n          <div class=\"form-group mb-2\">\r\n            <input\r\n              type={\"search\"}\r\n              className=\"form-control form-control-lg\"\r\n              onChange={(e) => setSearchValue(e.target.value)}\r\n              onInput={(e) => {\r\n                if (!e.target.value && getData) getData();\r\n              }}\r\n              placeholder=\"ຄົ້ນຫາສາຍແລ່ນ\"\r\n            />\r\n          </div>\r\n          {loading ? (\r\n            <center>{loadingData(25, \"ກຳລັງໂຫຼດຂໍ້ມູນ...\")}</center>\r\n          ) : (\r\n            <div className=\"mt-2\">\r\n              {data?.routeLocationDrivers?.data?.map((data, index) => (\r\n                <div\r\n                  className=\"d-flex \"\r\n                  key={index}\r\n                  onClick={() => handleClick(data?.title)}\r\n                >\r\n                  <table className=\"table\">\r\n                    <tr>\r\n                      <td\r\n                        className=\"text-left fs-6 text-black\"\r\n                        style={{\r\n                          borderTop: \"1px solid white\",\r\n                          borderBottom: \"1px solid #d9d8f0\",\r\n                        }}\r\n                      >\r\n                        <i className=\"fa-solid fa-truck me-1 text-danger\"></i>\r\n                        {data?.title}\r\n                      </td>\r\n                      <td\r\n                        className=\"text-right fs-6 text-black\"\r\n                        style={{\r\n                          borderTop: \"1px solid white\",\r\n                          borderBottom: \"1px solid #d9d8f0\",\r\n                        }}\r\n                      >\r\n                        {data?.priceDay ? (\r\n                          <>\r\n                            ລາຄາຕໍ່ຖ່ຽວ ກະເຊົ້າ:{\" \"}\r\n                            <b className=\"text-success\">\r\n                              {currency(data?.priceDay ? data?.priceDay : \"\")}\r\n                            </b>{\" \"}\r\n                            ກີບ\r\n                          </>\r\n                        ) : null}\r\n                        {data?.priceNight ? (\r\n                          <>\r\n                            ລາຄາຕໍ່ຖ່ຽວ ກະແລງ:{\" \"}\r\n                            <b className=\"text-warning\">\r\n                              {currency(\r\n                                data?.priceNight ? data?.priceNight : \"\"\r\n                              )}{\" \"}\r\n                            </b>\r\n                            ກີບ\r\n                          </>\r\n                        ) : null}\r\n                      </td>\r\n                    </tr>\r\n                  </table>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { Formik } from \"formik\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport logo from \"../../img/logo-app.png\";\r\nimport \"./util/index.css\";\r\nimport male from \"../../img/males.png\";\r\nimport {\r\n  useApolloClient,\r\n  useLazyQuery,\r\n  useMutation,\r\n} from \"@apollo/react-hooks\";\r\nimport { CREATE_REGISTER_DRIVERS } from \"./apollo\";\r\nimport {\r\n  loadingData,\r\n  messageSuccess,\r\n  messageWarning,\r\n  firstName,\r\n  valiDate,\r\n} from \"../../helper\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { s3Client } from \"../../helper/s3Client\";\r\nimport ListRouteLocation from \"../../helper/components/ListRoutelocation\";\r\nexport default function RegisterDriverPartner({ history }) {\r\n  const [createRegister, { loading }] = useMutation(CREATE_REGISTER_DRIVERS);\r\n  const [routeLocation, setListRouteLocation] = useState({});\r\n  // state files\r\n  const [imageFile, setImageFile] = useState(\"\");\r\n  const [closeFile, setCloseFile] = useState(null);\r\n  // profiles\r\n  const [imageName, setImageName] = useState(\"\");\r\n  const [file, setFile] = useState(\"\");\r\n  const handleUpload = async (event) => {\r\n    const imageName = uuidv4() + \".\" + event.target.files[0].type.split(\"/\")[1];\r\n    const _file = event.target.files[0];\r\n    setFile(_file);\r\n    const res = await s3Client.uploadFile(_file, imageName);\r\n    if (res?.location) {\r\n      setFile(_file);\r\n      setImageName(imageName);\r\n      messageSuccess(\"ອັບໂຫຼດຮູບພາບສຳເລັດແລ້ວ\");\r\n    } else {\r\n      setFile(null);\r\n      setImageName(\"\");\r\n      messageWarning(\"ການອັບໂຫຼດຮູບພາບບໍ່ສຳເລັດ\");\r\n    }\r\n  };\r\n  // filse\r\n  const subMitFiles = async (event) => {\r\n    const _imageFile =\r\n      uuidv4() + \".\" + event.target.files[0].type.split(\"/\")[1];\r\n    const _file = event.target.files[0];\r\n    setCloseFile(_file);\r\n    const res = await s3Client.uploadFile(_file, _imageFile);\r\n    if (res?.location) {\r\n      setCloseFile(_file);\r\n      setImageFile(_imageFile);\r\n      messageSuccess(\"ອັບໂຫຼດໄຟຣ໌ສຳເລັດແລ້ວ\");\r\n    } else {\r\n      setCloseFile(null);\r\n      setImageFile(\"\");\r\n      messageWarning(\"ອັບໂຫຼດໄຟຣ໌ບໍ່ສຳເລັດ\");\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      className=\"justify-content-md-center p-1\"\r\n      style={{ paddingBottom: 100, marginTop: 10 }}\r\n    >\r\n      <Formik\r\n        initialValues={{\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          note: \"\",\r\n          phoneNumber: \"\",\r\n          vehicleDetails: \"\",\r\n          note: \"\",\r\n          gender: \"\",\r\n        }}\r\n        validate={(values) => {\r\n          const errors = {};\r\n          if (!values.lastName) {\r\n            errors.lastName = \"ກະລຸນາປ້ອນນາມສະກຸມ\";\r\n          }\r\n          if (!values.note) {\r\n            errors.note = \"ກະລຸນາປ້ອນປະສົບການ ຫຼື ຜົນງານ\";\r\n          }\r\n          if (!values.vehicleDetails)\r\n            errors.vehicleDetails = \"ກະລຸນາປ້ອນລາຍລະອຽດລົດ\";\r\n          if (!values.firstName) errors.firstName = \"ກະລຸນາປ້ອນຊື່\";\r\n          if (!values?.gender) errors.gender = \"ກະບຸນາເລືອກເພດ\";\r\n          if (!imageFile) errors.files = \"ກະລຸນາເລືອກໄຟຣ໌\";\r\n          if (!values.phoneNumber) errors.phoneNumber = \"ກະລຸນາປ້ອນນາປ້ອນເບີໂທ\";\r\n          if (!routeLocation?._id) errors.routeID = \"ກະລຸນາເລືອກສາຍລົດກ່ອນ\";\r\n          return errors;\r\n        }}\r\n        onSubmit={async (values) => {\r\n          try {\r\n            let _created = await createRegister({\r\n              variables: {\r\n                data: {\r\n                  firstName: String(values?.firstName),\r\n                  lastName: String(values?.lastName),\r\n                  note: String(values?.note),\r\n                  gender: String(values?.gender),\r\n                  routeID: parseInt(routeLocation?._id),\r\n                  profileImage: String((values.profileImage = imageName)),\r\n                  files: String((values.files = imageFile)),\r\n                },\r\n              },\r\n            });\r\n            if (_created) {\r\n              messageSuccess(\"ສົ່ງຟອມສະໝັກສຳເລັດແລ້ວ\");\r\n              setTimeout(() => {\r\n                window.location.reload();\r\n              }, 2000);\r\n            }\r\n          } catch (error) {\r\n            messageWarning(\"ສົ່ງຟອມສະໝັກຜິດພາດ\");\r\n          }\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div className=\"card mt-1\">\r\n                  <div className=\"card-header\">\r\n                    <img src={logo} alt=\"logo\" className=\"img-fluid\" />\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <center>\r\n                      <h2>ຟອມສະໝັກລົດຮ່ວມ</h2>\r\n                    </center>\r\n                    <hr />\r\n                    <form className=\"form-horizontal\">\r\n                      <div className=\"form-group\">\r\n                        <label className=\"control-label\">\r\n                          ອັບໂຫຼດຮູບໂປຣໄຟຣ໌\r\n                        </label>\r\n                        <div style={{ textAlign: \"center\" }} for=\"file-upload\">\r\n                          <input\r\n                            type=\"file\"\r\n                            id=\"file-upload\"\r\n                            className=\"bg-danger\"\r\n                            onChange={handleUpload}\r\n                            hidden\r\n                          />\r\n                          <label htmlFor=\"file-upload\" className=\"long-border\">\r\n                            {file ? (\r\n                              <img\r\n                                src={URL.createObjectURL(file)}\r\n                                alt={file.name}\r\n                                style={{ width: \"170px\", height: \"180\" }}\r\n                              />\r\n                            ) : (\r\n                              <img\r\n                                src={male}\r\n                                style={{ width: \"170px\", height: \"180px\" }}\r\n                              />\r\n                            )}\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row mt-1\">\r\n                        <div className=\"col-md-6\">\r\n                          <div className=\"form-group\">\r\n                            <label className=\"control-label\">\r\n                              ຊື່ {valiDate()}\r\n                            </label>\r\n                            <div className=\"input-group\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control form-control-lg\"\r\n                                placeholder=\"ປ້ອນຊື່ \"\r\n                                name=\"firstName\"\r\n                                required=\"required\"\r\n                                onChange={handleChange}\r\n                                value={values.firstName}\r\n                              />\r\n                            </div>\r\n                            <i className=\"text-danger mt-1\">\r\n                              {errors.firstName}\r\n                            </i>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                          <div className=\"form-group\">\r\n                            <label className=\"control-label\">\r\n                              ນາມສະກຸມ{valiDate()}\r\n                            </label>\r\n                            <div className=\"input-group\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control form-control-lg\"\r\n                                placeholder=\"ປ້ອນນາມສະກຸມ \"\r\n                                name=\"lastName\"\r\n                                required=\"required\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.lastName}\r\n                              />\r\n                            </div>\r\n                            <i className=\"text-danger mt-1\">\r\n                              {errors.lastName}\r\n                            </i>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label className=\"control-label\">ເພດ{valiDate()}</label>\r\n                        <select\r\n                          className=\"form-control form-control-lg\"\r\n                          name=\"gender\"\r\n                          onChange={handleChange}\r\n                          value={values.gender}\r\n                        >\r\n                          <option value=\"\">ເລືອກເພດ</option>\r\n                          <option value=\"MALE\">ຊາຍ</option>\r\n                          <option value=\"FEMALE\">ຍິງ</option>\r\n                          <option value=\"OTHER\">ບໍລະບຸ</option>\r\n                        </select>\r\n                        <i className=\"text-danger mt-1\">{errors.gender}</i>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label className=\"control-label\">\r\n                          ເບີໂທ{valiDate()}\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                          <div class=\"input-group-prepend\">\r\n                            <span\r\n                              className=\"input-group-text form-control-lg\"\r\n                              style={{\r\n                                backgroundColor: \"#ebe4e6\",\r\n                                borderTopLeftRadius: 8,\r\n                                borderBottomLeftRadius: 8,\r\n                              }}\r\n                            >\r\n                              +856 20\r\n                            </span>\r\n                          </div>\r\n                          <input\r\n                            type=\"number\"\r\n                            className=\"form-control form-control-lg\"\r\n                            placeholder=\"7678xxxx \"\r\n                            name=\"phoneNumber\"\r\n                            required=\"required\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.phoneNumber}\r\n                            maxLength={8}\r\n                          />\r\n                        </div>\r\n                        <i className=\"text-danger mt-1\">{errors.phoneNumber}</i>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label className=\"control-label\">\r\n                          ເລືອກສາຍລົດ{valiDate()}\r\n                        </label>\r\n                        <ListRouteLocation\r\n                          getData={(data) => {\r\n                            setListRouteLocation(data);\r\n                          }}\r\n                          defaultValue={routeLocation?.title ?? \"\"}\r\n                          size=\"lg\"\r\n                        />\r\n                        <div className=\"text-danger mt-1\">{errors.routeID}</div>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label className=\"control-label\">\r\n                          ລາຍລະອຽດຂໍ້ມູນລົດ{\" \"}\r\n                        </label>\r\n                        <textarea\r\n                          className=\"form-control form-control-lg\"\r\n                          rows={3}\r\n                          placeholder=\"ປ້ອນລາຍລະອຽດຂໍ້ມູນລົດ\"\r\n                          name=\"vehicleDetails\"\r\n                          required=\"required\"\r\n                          onChange={handleChange}\r\n                          value={values.vehicleDetails}\r\n                        ></textarea>\r\n                        <i className=\"text-danger mt-1\">\r\n                          {errors.vehicleDetails}\r\n                        </i>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label className=\"control-label\">\r\n                          ລາຍລະອຽດ (ຜົນງານ ແລະ ປະສົບການ){\" \"}\r\n                        </label>\r\n                        <textarea\r\n                          className=\"form-control form-control-lg\"\r\n                          rows={5}\r\n                          placeholder=\"ປ້ອນລາຍລະອຽດ\"\r\n                          name=\"note\"\r\n                          required=\"required\"\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          value={values.note}\r\n                        ></textarea>\r\n                        <i className=\"text-danger mt-1\">{errors.note}</i>\r\n                      </div>\r\n                      <div className=\"form-group mb-3\">\r\n                        <label>ເລືອກໄຟຣ໌ເອກະສານ {valiDate()}</label>\r\n                        <input\r\n                          type=\"file\"\r\n                          className=\"form-control form-control-lg\"\r\n                          name=\"files\"\r\n                          required=\"required\"\r\n                          onChange={subMitFiles}\r\n                          placeholder=\"ຮູບພາບໂປຣຟາຍ\"\r\n                        />\r\n                        <i className=\"text-danger mt-1\">{errors.files}</i>\r\n                      </div>\r\n                      <button\r\n                        type=\"button\"\r\n                        disabled={isSubmitting}\r\n                        onClick={handleSubmit}\r\n                        className=\"btn btn-block rounded btn-lg btn-primary\"\r\n                      >\r\n                        <i className=\"fa-solid fa-paper-plane me-1\" />{\" \"}\r\n                        ຢືນຢັນສົ່ງຟອມ\r\n                      </button>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport RegisterDriverPartner from \"../pages/register/form\";\r\nexport default function Routes() {\r\n  return (\r\n    <Router>\r\n          <html style={{backgroundColor:'#ccc',margin:-20}}>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            component={(props) => <RegisterDriverPartner {...props} />}\r\n          />\r\n        </Switch>\r\n     </html>\r\n    </Router>\r\n  );\r\n}\r\n","export const userReducer = (state, action) => {\r\n  if (action.type === \"landing\") {\r\n    return action.payload;\r\n  }\r\n  if (action.type === \"logout\") {\r\n    return null;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport const pageTitleReducer = (state, action) => {\r\n  if (action) {\r\n    return action;\r\n  }\r\n  return state;\r\n};\r\nexport const tabController = (state, action) => {\r\n  if (action.type === \"tab\") {\r\n    return action.payload;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport const dateReducer = (state, action) => {\r\n  if (action) {\r\n    return action.payload;\r\n  }\r\n  return state;\r\n};","import React, { useEffect, useReducer, useState } from \"react\";\r\nimport \"moment/locale/lo\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { InMemoryCache } from \"@apollo/client\";\r\nimport \"./index.css\";\r\nimport { startOfMonth, TOKEN } from \"./helper\";\r\nimport _ from \"lodash\";\r\nimport Routes from \"./routes\";\r\nimport { pageTitleReducer, userReducer, dateReducer } from \"./store\";\r\nimport Notiflix from \"notiflix\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport default function App() {\r\n  const [userState, userDispatch] = useReducer(userReducer, null);\r\n  const [titleState, titleDispatch] = useReducer(pageTitleReducer, null);\r\n  const [dateState, dateDispatch] = useReducer(dateReducer, {\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n  });\r\n\r\n  const client = new ApolloClient({\r\n    uri: \"https://api.services.anousith.express/graphql\",\r\n    cache: new InMemoryCache({\r\n      addTypename: false,\r\n    }),\r\n    \r\n    request: (operation) => {\r\n      const _resData = localStorage.getItem(TOKEN);\r\n      const _localJson = JSON.parse(_resData);\r\n      if (_localJson) {\r\n        operation.setContext({\r\n          headers: {\r\n            authorization: _localJson?.accessToken,\r\n          },\r\n        });\r\n        return;\r\n      }\r\n    },\r\n    onError: (err) => {\r\n      console.log(\"ERROR: \", err);\r\n      let isTokenError1 = _.some(err.graphQLErrors, {\r\n        message: \"Error: TokenExpiredError: jwt expired\",\r\n      });\r\n      let isTokenError2 = _.some(err.graphQLErrors, {\r\n        message: \"Error: JsonWebTokenError: jwt must be provided\",\r\n      });\r\n      let isTokenError3 = _.some(err.graphQLErrors, {\r\n        message: \"Error: DO_NOT_HAVE_PERMISSION\",\r\n      });\r\n      if (isTokenError1 || isTokenError2 || isTokenError3) {\r\n        Notiflix.Report.warning(\r\n          \"ແຈ້ງເຕືອນ\",\r\n          \"ການເຂົ້າລະບົບຂອງທ່ານໄດ້ໝົດອາຍຸລົງແລ້ວ ກະລຸນາເຂົ້າລະບົບໃໝ່ອີກຄັ້ງ.\",\r\n          \"ຕົກລົງ\",\r\n          () => {\r\n            localStorage.clear();\r\n            window.location.replace(\"/\");\r\n          }\r\n        );\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        userState,\r\n        userDispatch,\r\n        titleState,\r\n        titleDispatch,\r\n        dateState,\r\n        dateDispatch,\r\n      }}\r\n    >\r\n      <ApolloProvider client={client}>\r\n        <div className=\"app-container\">\r\n          <Routes />\r\n        </div>\r\n      </ApolloProvider>\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport { AppContext };\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}